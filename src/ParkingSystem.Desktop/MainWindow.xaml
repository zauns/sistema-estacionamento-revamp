<Window x:Class="ParkingSystem.Desktop.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ParkingSystem.Desktop"
        xmlns:viewModels="clr-namespace:ParkingSystem.Desktop.ViewModels"
        mc:Ignorable="d"
        Title="Sistema de Estacionamento" Height="600" Width="900"
        WindowStartupLocation="CenterScreen"
        d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel}">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- Estilo para o botão que representa a vaga -->
        <Style x:Key="ParkingSpotButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#4CAF50"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="MinHeight" Value="60"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="5" 
                                BorderBrush="#388E3C" 
                                BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Gatilho que muda a cor se a vaga estiver ocupada -->
                <DataTrigger Binding="{Binding IsOccupied}" Value="True">
                    <Setter Property="Background" Value="#F44336"/>
                    <Setter Property="BorderBrush" Value="#D32F2F"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Cabeçalho e Botões -->
        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,10">
            <Button Content="Atualizar Vagas" Command="{Binding LoadParkingSpotsCommand}" Padding="10,5" FontSize="14"/>
        </StackPanel>

        <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding ParkingSpots}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="10"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Style="{StaticResource ParkingSpotButtonStyle}"
                                Content="{Binding Number}"
                                Command="{Binding DataContext.ShowSpotDetailsCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                CommandParameter="{Binding}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <!-- Barra de Status e Mensagens de Erro -->
        <StatusBar Grid.Row="2" Margin="0,10,0,0">
            <StatusBarItem>
                <TextBlock Text="{Binding ErrorMessage}" Foreground="Red" FontWeight="Bold"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <ProgressBar IsIndeterminate="True" Width="100" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
